class Solution:
    # @param A : list of list of integers
    # @return an integer
    def maximalRectangle(self, A):
        
        def max_hist_rect(heights):
            max_area=0
            stack=[]
            i=0
            for i in range(len(heights)):
                
                if stack and heights[stack[-1]]<=heights[i]:
                    stack.append(i)
                
                
                else:
                    
                    while(stack and heights[i]<heights[stack[-1]]):
                        
                        histogram_index=stack.pop()
                        
                        if len(stack)==0:
                            area=heights[histogram_index]*i
                            max_area=max(max_area,area)
                        
                        else:
                            area=heights[histogram_index]*(i-stack[-1]-1)
                            max_area=max(max_area,area)
                
                    stack.append(i)
        
            i+=1
            
            while len(stack)!=0:
                
                histogram_index=stack.pop()
                        
                if len(stack)==0:
                    area=heights[histogram_index]*i
                    max_area=max(max_area,area)
    
                else:
                    area=heights[histogram_index]*(i-stack[-1]-1)
                    max_area=max(max_area,area)
            
            
            return max_area
        
        
        maxi=-float('inf')
        
        histogram=[0 for j in range(len(A[0]))]
        for i in range(0,len(A)):
            
            
            for j in range(0,len(A[0])):
                
                if A[i][j]==0:
                    histogram[j]=0
                    
                
                else:
                    histogram[j]+=A[i][j]
                
            maxi=max(maxi,max_hist_rect(histogram))
        
        
        return maxi
