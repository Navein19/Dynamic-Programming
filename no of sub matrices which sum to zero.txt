class Solution:
    # @param A : list of list of integers
    # @return an integer
    def solve(self, A):
        
        if len(A)==0 or len(A[0])==0:
            return  0
        
        def calc_prefix(arr):
            
            prefix=[0 for i in range(len(arr))]
            
            prefix[0]=arr[0]
            
            for i in range(1,len(arr)):
                prefix[i]=prefix[i-1]+arr[i]
            
            return prefix
        
        count=0
        
        for l in range(0,len(A[0])):
            
            column=[0 for i in range(len(A))]
            
            for r in range(l,len(A[0])):
                
                for i in range(len(A)):
                    column[i]+=A[i][r]
                
                prefix=calc_prefix(column)
                
                hashmap={}
                
                for k in range(0,len(prefix)):
                    
                    if prefix[k]==0:
                        count+=1
                        
                    
                    if hashmap.get(prefix[k])!=None:
                        count+=hashmap.get(prefix[k])
                        hashmap[prefix[k]]+=1
                    
                    else:
                        hashmap[prefix[k]]=1
        
        return count
                        
                    
                    
                    
                
