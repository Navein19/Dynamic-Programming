class Solution:
    # @param A : tuple of integers
    # @return an integer
    def longestSubsequenceLength(self, A):
        
        if len(A)==0:
            return 0
        
        
        dp_inc=[1 for i in range(len(A))]
        
        dp_dec=[1 for i in range(len(A))]
    
        
        for i in range(1,len(A)):
            
            for j in range(0,i):
                
                if A[j]<A[i]:
                    dp_inc[i]=max(dp_inc[i],1+dp_inc[j])
    
        
        for i in range(len(A)-2,-1,-1):
            
            for j in range(len(A)-1,i,-1):
                
                if A[j]<A[i]:
                    dp_dec[i]=max(dp_dec[i],1+dp_dec[j])
                    
        final_dp=[]
        for i in range(len(A)):
            final_dp.append(dp_inc[i]+dp_dec[i])
        
        return max(final_dp)-1
